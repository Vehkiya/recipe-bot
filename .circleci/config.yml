version: 2.1

executors:
  jdk14:
    docker:
      - image: 'cimg/openjdk:14.0'

orbs:
  maven: circleci/maven@1.2.0

commands:
  maven-test:
    description: |
      Checkout, build, test, and upload test results for a Maven project.
    parameters:
      app_src_directory:
        default: ''
        description: >-
          Useful when the source of your maven project is nott in the root directory
          of your git repo. Supply the name of the directory or relative path of the
          directory containing your source code.
        type: string
      command:
        default: verify
        description: The maven command to run.
        type: string
      maven_command:
        default: mvn
        description: Specify a custom path for invoking maven
        type: string
      settings_file:
        default: ''
        description: Specify a custom settings file to use (optional)
        type: string
      test_results_path:
        default: target/surefire-reports
        description: The path to the test results.
        type: string
    steps:
      - checkout
      - maven/with_cache:
          app_src_directory: << parameters.app_src_directory >>
          maven_command: << parameters.maven_command >>
          settings_file: << parameters.settings_file >>
          steps:
            - run:
                command: |
                  if [ -n "<< parameters.settings_file >>" ]; then
                    set -- "$@" --settings "<< parameters.settings_file >>"
                  fi
                  << parameters.maven_command >> << parameters.command >> "$@"
                name: Run Tests
                working_directory: << parameters.app_src_directory >>
      - maven/process_test_results:
          test_results_path: << parameters.test_results_path >>

jobs:
  build-test:
    executor: jdk14
    steps:
      - maven-test:
          command: test
      - persist_to_workspace:
          root: ./
          paths:
            - target/
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
  sonar-scan:
    executor: jdk14
    steps:
      - checkout
      - attach_workspace:
          at: ./target
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v1-{{ .Branch }}-
            - maven-repo-v1-
      - run:
          name: Analyze on SonarCloud
          command: mvn verify sonar:sonar
  docker-build:
    executor: jdk14
    environment:
      IMAGE_NAME: vehkiya/recipe-bot
    steps:
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: ./target
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v1-{{ .Branch }}-
            - maven-repo-v1-
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t $IMAGE_NAME:$TAG .
          echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
          docker push $IMAGE_NAME:$TAG


workflows:
  version: 2
  build:
    jobs:
      - build-test:
          name: Unit Tests
      - sonar-scan:
          name: SonarCloud code quality check
          context: SonarCloud
          requires:
            - 'Unit Tests'
      - docker-build:
          name: Publish Image on DockerHub
          context: Docker
          requires:
            - 'Unit Tests'
#          filters:
#            branches:
#              only:
#                - master